#!/bin/bash

# Setting and constant definitions
export BIN_DIR=$(cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )
export MYCROFT_STORAGE_DIR=$(readlink -f ${BIN_DIR}/../storage)
export MYCROFT_CREDENTIALS_DIR=$(readlink -f ${BIN_DIR}/../generated)

# praseconf() parses the yaml configuration in mycroft.yaml and sets
# up any needed environment variables.
parseconf() {
  if [ ! -f ${BIN_DIR}/../mycroft.yaml ]; then
    log_error "No mycroft.yaml file found. Start by copying mycroft.yaml.sample and edit it accordingly."
    exit 1;
  fi

  export MYCROFT_DOMAIN=$(yq e '.mycroft_domain' mycroft.yaml)
  if [ -z "$MYCROFT_DOMAIN" ]; then
    log_error "mycroft_domain not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export SSO_BASE_URL=$(yq e '.sso_base_url' mycroft.yaml)
  if [ -z "$SSO_BASE_URL" ]; then
    log_error "sso_base_url not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export OAUTH_BASE_URL=$(yq e '.oauth_base_url' mycroft.yaml)
  if [ -z "$OAUTH_BASE_URL" ]; then
    log_error "oauth_base_url not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export GITHUB_USER=$(yq e '.github_user' mycroft.yaml)
  if [ -z "$GITHUB_USER" ]; then
    log_error "github_user not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export GITHUB_PASSWORD=$(yq e '.github_password' mycroft.yaml)
  if [ -z "$GITHUB_PASSWORD" ]; then
    log_error "github_password not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export EMAIL_SERVICE_HOST=$(yq e '.email_service_host' mycroft.yaml)
  if [ -z "$EMAIL_SERVICE_HOST" ]; then
    log_error "email_service_host not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export EMAIL_SERVICE_PORT=$(yq e '.email_service_port' mycroft.yaml)
  if [ -z "$EMAIL_SERVICE_PORT" ]; then
    log_error "email_service_port not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export EMAIL_SERVICE_USER=$(yq e '.email_service_user' mycroft.yaml)
  if [ -z "$EMAIL_SERVICE_USER" ]; then
    log_error "email_service_user not set! Check your mycroft.yaml file.";
    exit 1;
  fi

  export EMAIL_SERVICE_PASSWORD=$(yq e '.email_service_password' mycroft.yaml)
  if [ -z "$EMAIL_SERVICE_PASSWORD" ]; then
    log_error "email_service_password not set! Check your mycroft.yaml file.";
    exit 1;
  fi
}

log() {
  date=$(date +"%Y-%m-%d %H:%M:%S")

  case $1 in
    "warn")
      shift
      echo -e "\e[93m[${date}][WARNING] " ${@} "\e[0m"
      ;;
    "error")
      shift
      echo -e "\e[31m[${date}][ERROR] " ${@} "\e[0m"
      ;;
    *)
      shift
      echo -e "[${date}] " ${@}
      ;;
  esac
}

log_debug() {
  log "debug" $@
}

log_info() {
  log "info" $@
}

log_warn() {
  log "warn" $@
}

log_error() {
  log "error" $@
}

# Usage: generate_password_file dir filename bytes
# Will not regenerate a file if it's already there
generate_password_file() {
  mkdir -p $1
  if [ -f ${1}/${2} ]; then
    log_warn "File ${1}/${2} already exists. Skipping generation."
  fi
  echo $(</dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${3:-32}) > ${1}/${2}
}
